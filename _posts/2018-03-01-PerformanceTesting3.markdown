---
layout: post
title: "Performance Testing Guidance for Web Applications Chapter 3  요약"
date: 2018-03-01
categories:
---

# Chapter 3 –  Risks Addressed Through Performance Testing

## 속도 관련 위험
성능 테스트에서 해결할 수 있는 가장 일반적인 속도 관련 위험
 * 응용프로그램이 사용자를 만족시킬 만큼 빠른가?
 * 비즈니스가 데이터가 오래되기 전에 어플리케이션에서 수집 한 데이터를 처리하고 활용할 수 있는가?
 * 어플리케이션이 사용자에게 최신 정보를 제공하는가?
 * 오류가 발생하기 전에 최대 예상 응답 시간 안에 웹 서비스가 응답하는가?

속도 관련 위험을 완화하기 위한 전략
* 실적 요구 사항과 목표가 사용자의 요구를 나타내는 지 확인합니다.
* 속도 측정을 이전 버전이나 경쟁 응용 프로그램과 비교합니다.
* 실제 생산 과정에서 비즈니스 운영에 사용되는 것과 유사한 데이터 유형, 배포 및 볼륨으로 성능 테스트를 수행합니다.
* 사용자가 예상되는 최고 부하를 받고있는 동안 시스템에 대한 사용자 만족도에 대한 대표적인 피드백을 요청합니다.
* 성능 테스트에 시간이 중요한 트랜잭션을 포함합니다.
* 다양한 조건, 부하 수준 및 시나리오에서 속도를 측정합니다.
* 성능 테스트 중 모든 올바른 데이터가 표시되고 저장되었는지 확인합니다.

## 확장 관련 위험
성능 테스트를 통해 해결할 수있는 일반적인 확장 관련 위험
* 어플리케이션이 전체 사용자에게 일관되고 수용 가능한 응답 시간을 제공하는가?
* 응용 프로그램이 수명 동안 수집하는 모든 데이터를 저장할 수 있는가?
* 응용 프로그램이 최고 용량에 다다랐을 때 나타내는 경고가 있는가?
* 과도한 사용에도 응용 프로그램의 보안이 유지되는가?
* 어플리케이션이 예상치 못한 최고 부하를 견딜 수 있는가?

확장 관련 위험을 완화하기 위한 전략
* 다양한 부하에서 측정 된 속도를 비교합니다.
* 실제 생산 과정에서 비즈니스 운영에 사용되는 것과 유사한 데이터 유형, 배포 및 볼륨으로 성능 테스트를 수행합니다.
* 실제 요구 사항에 매핑되는 의미있는 성능 테스트를 수행합니다.
* 특정 사용자 요청에 응답하여 생성 된 데이터베이스 항목을 확인하거나 반환 된 내용의 유효성을 검사하여 다양한로드에서 응용 프로그램의 기능적 정확성을 검증합니다.
* 기대되는 최대 부하를 초과하는 성능 테스트를 진행하고 성능 테스트 중이나 후에 대표적인 사용자가 수동으로 응용 프로그램에 접근하도록함으로써 동작을 관찰합니다.

## 안정성 관련 위험
성능 테스트를 통해 해결할 수있는 일반적인 안전성 관련 위험
* 데이터 손상, 속도 저하 또는 재부팅해야하는 서버없이 오랜 시간 동안 응용 프로그램을 실행할 수 있는가?
* 응용 프로그램이 예상치 못하게 작동하지 않으면 부분적으로 완료된 트랜잭션은 어떻게되는가?
* 예기치 못하게 중단된 시간 이후에 응용 프로그램이 다시 온라인 상태가 되면 올바른 시점에 다시 되는가?
* 오류나 반복 되는 기능 오류들로 인해 시스템 충돌이 발생할 수 있는가?
* 시스템 전체에 부작용을 일으키는 트랜잭션이 있는가?
* 시스템을 패치하지 않고 업데이트 할 수 있는가?

안정성 관련 위험을 완화하기 위한 전략
* 현실적인 지구력 테스트를 위해 시간을 투자합니다.
* 주요 시나리오로 스트레스 테스트를 수행합니다.
* 테스트 중 서버를 오프라인으로 가져와 나머지 시스템의 기능, 성능 및 데이터 무결성 동작을 관찰합니다.
* 성능 테스트 시나리오에 오류 또는 예외 사례를 포함시킵니다.
* 성능 테스트 중에 시스템에 패치를 적용합니다.
* 성능 테스트 중에 백업 또는 바이러스 업데이트를 강제 실행합니다.


## 참조
Performance Testing Guidance for Web Applications
